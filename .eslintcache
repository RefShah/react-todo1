[{"/Users/shahril/react/react-app2/src/index.js":"1","/Users/shahril/react/react-app2/src/App.js":"2","/Users/shahril/react/react-app2/src/reportWebVitals.js":"3","/Users/shahril/react/react-app2/src/routes/ToDo.js":"4","/Users/shahril/react/react-app2/src/routes/Home.js":"5","/Users/shahril/react/react-app2/src/routes/ToDo1.js":"6","/Users/shahril/react/react-app2/src/routes/Clipboard1.js":"7","/Users/shahril/react/react-app2/src/components/postIt1.jsx":"8","/Users/shahril/react/react-app2/src/components/gSheet1.jsx":"9","/Users/shahril/react/react-app2/src/components/gSheet2.jsx":"10","/Users/shahril/react/react-app2/src/components/ToDo1.jsx":"11","/Users/shahril/react/react-app2/src/components/ToDo1Items.jsx":"12","/Users/shahril/react/react-app2/src/components/ToDo2.jsx":"13","/Users/shahril/react/react-app2/src/components/FJollyToDoList.jsx":"14","/Users/shahril/react/react-app2/src/components/FJollyToDo.jsx":"15","/Users/shahril/react/react-app2/src/components/FJollyToDoForm.jsx":"16","/Users/shahril/react/react-app2/src/components/ToDo2Items.jsx":"17","/Users/shahril/react/react-app2/src/cfg/config.js":"18","/Users/shahril/react/react-app2/src/components/ToDo2Note.jsx":"19","/Users/shahril/react/react-app2/src/components/PieceForm.jsx":"20","/Users/shahril/react/react-app2/src/components/PieceNote.jsx":"21","/Users/shahril/react/react-app2/src/components/PieceEntry.jsx":"22","/Users/shahril/react/react-app2/src/components/Piece2Form.jsx":"23","/Users/shahril/react/react-app2/src/components/Piece2Note.jsx":"24","/Users/shahril/react/react-app2/src/components/Piece2Theme.jsx":"25","/Users/shahril/react/react-app2/src/components/TryCircles1.jsx":"26","/Users/shahril/react/react-app2/src/components/Circles.js":"27","/Users/shahril/react/react-app2/src/Circles.js":"28","/Users/shahril/react/react-app2/src/components/gSheet2_tt1.jsx":"29","/Users/shahril/react/react-app2/src/components/gSheet2_tt2_RGL.jsx":"30","/Users/shahril/react/react-app2/src/test-hook.jsx":"31","/Users/shahril/react/react-app2/src/components/gSheet2_tt3_RGL.jsx":"32"},{"size":2315,"mtime":1620376456826,"results":"33","hashOfConfig":"34"},{"size":715,"mtime":1615270555699,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1611720277386,"results":"36","hashOfConfig":"34"},{"size":1753,"mtime":1611729829388,"results":"37","hashOfConfig":"34"},{"size":449,"mtime":1615269097591,"results":"38","hashOfConfig":"34"},{"size":1756,"mtime":1615192378996,"results":"39","hashOfConfig":"34"},{"size":1218,"mtime":1615259424250,"results":"40","hashOfConfig":"34"},{"size":1558,"mtime":1616477096258,"results":"41","hashOfConfig":"34"},{"size":1082,"mtime":1616379900298,"results":"42","hashOfConfig":"34"},{"size":2608,"mtime":1616387100266,"results":"43","hashOfConfig":"34"},{"size":2408,"mtime":1616478137326,"results":"44","hashOfConfig":"34"},{"size":726,"mtime":1616487725592,"results":"45","hashOfConfig":"34"},{"size":6683,"mtime":1618198210443,"results":"46","hashOfConfig":"34"},{"size":2173,"mtime":1616483421284,"results":"47","hashOfConfig":"34"},{"size":1127,"mtime":1616480482633,"results":"48","hashOfConfig":"34"},{"size":1500,"mtime":1616484565948,"results":"49","hashOfConfig":"34"},{"size":1147,"mtime":1617768824521,"results":"50","hashOfConfig":"34"},{"size":317,"mtime":1617758834660,"results":"51","hashOfConfig":"34"},{"size":2463,"mtime":1618806253499,"results":"52","hashOfConfig":"34"},{"size":12879,"mtime":1618543732741,"results":"53","hashOfConfig":"34"},{"size":7220,"mtime":1618544010538,"results":"54","hashOfConfig":"34"},{"size":1621,"mtime":1618989245409,"results":"55","hashOfConfig":"34"},{"size":11580,"mtime":1618984492481,"results":"56","hashOfConfig":"34"},{"size":15171,"mtime":1620036178251,"results":"57","hashOfConfig":"34"},{"size":2706,"mtime":1618989106525,"results":"58","hashOfConfig":"34"},{"size":5418,"mtime":1620032944484,"results":"59","hashOfConfig":"34"},{"size":2370,"mtime":1620032824129,"results":"60","hashOfConfig":"34"},{"size":2370,"mtime":1619054017060,"results":"61","hashOfConfig":"34"},{"size":7039,"mtime":1620305427374,"results":"62","hashOfConfig":"34"},{"size":2171,"mtime":1620376210559,"results":"63","hashOfConfig":"34"},{"size":1777,"mtime":1620372464411,"results":"64","hashOfConfig":"34"},{"size":16197,"mtime":1620651172953,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1rpkisf",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"69"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shahril/react/react-app2/src/index.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.css';\n// import PostIt1 from './components/postIt1'\nimport GSheet1 from './components/gSheet1'\n// import GSheet2 from './components/gSheet2' \nimport GSheet2 from './components/gSheet2_tt1'\nimport NoDraggingLayout from './components/gSheet2_tt2_RGL'\nimport MyFirstGrid from './components/gSheet2_tt3_RGL'\nimport ToDo1 from './components/ToDo1'\nimport ToDo2 from './components/ToDo2'\nimport PieceForm from './components/PieceForm'\nimport Piece2Form from './components/Piece2Form'\nimport FJollyToDoList from \"./components/FJollyToDoList\";\nimport firebase from '@firebase/app';\nimport PieceNote from \"./components/TryCircles1\";\nimport styled, { css } from 'styled-components';\nimport Draggable from \"./Circles\"\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDFF05g_yxGmH4fUjp2tQO7MmlB2aRyY80\",\n  authDomain: \"get-theme1.firebaseapp.com\",\n  projectId: \"get-theme1\",\n  storageBucket: \"get-theme1.appspot.com\",\n  messagingSenderId: \"204613864015\",\n  appId: \"1:204613864015:web:34560516be923426cb383a\",\n  measurementId: \"G-3X0Z7HMDD2\"\n};\n// Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n\n// Use Title and Wrapper like any other React component – except they're styled!\n// render(\n//   <Wrapper>\n//     <Title>\n//       Hello World!\n//     </Title>\n//   </Wrapper>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <ToDo2 /> */}\n    {/* <GSheet2 /> */}\n    <MyFirstGrid />\n    {/* <PieceNote noteContent={\"note.noteContent\"} \n                  /> */}\n  {/* <Draggable> \n    <Title>\n      Hello World!\n    </Title>\n  </Draggable> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["163","164"],"/Users/shahril/react/react-app2/src/App.js",["165"],"import { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport ToDo from \"./routes/ToDo\";\nimport ToDo1 from \"./routes/ToDo1\";\nimport Clipboard1 from \"./routes/Clipboard1\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/todo\">\n            <ToDo />\n          </Route>\n          <Route path=\"/todo1\">\n            <ToDo1 />\n          </Route>\n          <Route path=\"/clipboard1\">\n            <Clipboard1 />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/shahril/react/react-app2/src/reportWebVitals.js",[],"/Users/shahril/react/react-app2/src/routes/ToDo.js",[],"/Users/shahril/react/react-app2/src/routes/Home.js",[],"/Users/shahril/react/react-app2/src/routes/ToDo1.js",[],"/Users/shahril/react/react-app2/src/routes/Clipboard1.js",["166"],"import React, { useRef, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CopyExample() {\r\n\r\n  const [copySuccess, setCopySuccess] = useState('');\r\n  const textAreaRef = useRef(null);\r\n\r\n  function copyToClipboard(e) {\r\n    textAreaRef.current.select();\r\n    let cs = textAreaRef.selectionStart;\r\n    alert('A name was submitted: ' + cs);\r\n    document.execCommand('copy');\r\n    // This is just personal preference.\r\n    // I prefer to not show the whole text area selected.\r\n    e.target.focus(); // if i comment this out, after clicking btn, the text will be selected/highligted\r\n    setCopySuccess('Copied!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n       /* Logical shortcut for only displaying the \r\n          button if the copy command exists */\r\n       document.queryCommandSupported('copy') &&\r\n        <div>\r\n          <button onClick={copyToClipboard}>Copy</button> \r\n          {copySuccess}\r\n        </div>\r\n      }\r\n      <form>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          value='Some text to '\r\n        />\r\n        `<textarea\r\n              className='html-editor'  \r\n              >\r\n          </textarea>` \r\n      </form>\r\n    </div>\r\n  );\r\n}","/Users/shahril/react/react-app2/src/components/postIt1.jsx",["167"],"//import React from \"react\";\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PostIt1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.editor = React.createRef();\r\n    this.state = { text: 'Initial5' };\r\n  }\r\n    state = {  }\r\n  render() { \r\n    return (  <div>        <textarea\r\n      ref={this.editor}\r\n      value={this.state.text}\r\n      onChange={e => this.setState({ text: e.target.value })}\r\n    />\r\n            <button\r\n          onClick={() => {\r\n            const textareaElem = this.editor.current;\r\n            const selectionStart = textareaElem.selectionStart;\r\n            const selectionEnd = textareaElem.selectionEnd;\r\n            if (selectionStart === selectionEnd) {\r\n              // no selection, just concat\r\n              this.setState({ text: this.state.text + 'Hello World' });\r\n            } else {\r\n              this.setState({\r\n                text:\r\n                  this.state.text.slice(0, selectionStart) +\r\n                  'Hello World' +\r\n                  this.state.text.slice(selectionEnd)\r\n              });\r\n              alert('A name was submitted: ' + this.state.text.slice(selectionStart, selectionEnd));\r\n            }\r\n            textareaElem.focus();\r\n          }}\r\n        >\r\n          Insert\r\n        </button>\r\n        <button\r\n                  onClick={() => {\r\n                    this.setState({ text: 'New Populate'});\r\n                  }}\r\n        >\r\n          Populate</button>\r\n\r\n</div>);\r\n  }\r\n}\r\n \r\nexport default PostIt1;","/Users/shahril/react/react-app2/src/components/gSheet1.jsx",["168","169"],"import React, { Component } from 'react';\r\n// import logo from './logo.png';\r\n//import './App.css';\r\nimport Tabletop from 'tabletop';\r\nimport PostIt1 from '../components/postIt1'\r\n\r\nclass GSheet1 extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    Tabletop.init({\r\n      key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n      callback: googleData => {\r\n        this.setState({\r\n          data: googleData\r\n        })\r\n      },\r\n      simpleSheet: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state\r\n    return (\r\n\r\n      <div className=\"GSheet1\">\r\n    <PostIt1 />\r\n         <div id=\"book-details\">\r\n          {\r\n            data.map(obj => {\r\n              return (\r\n                     <div key={obj.A1}>\r\n                         <h1><a href = {obj.A1}  target=\"_blank\"> {obj.A1}</a></h1>\r\n                         <b>{obj.A1}</b>\r\n                      </div>\r\n             )\r\n            })\r\n          }\r\n        </div>\r\n\r\n</div>\r\n\r\n);\r\n}\r\n}\r\n\r\nexport default GSheet1;","/Users/shahril/react/react-app2/src/components/gSheet2.jsx",["170","171"],"import React, { Component } from 'react';\r\n// import logo from './logo.png';\r\n//import './App.css';\r\nimport Tabletop from 'tabletop';\r\nimport PostIt1 from '../components/postIt1'\r\n\r\nclass GSheet1 extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.editor = React.createRef();\r\n    this.state = {\r\n      data: [],\r\n      text: 'Initial2',\r\n      loaded: false\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    Tabletop.init({\r\n      key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n      callback: googleData => {\r\n        this.setState({\r\n          data: googleData,\r\n          loaded: true,\r\n          text: googleData[0].A1\r\n        })\r\n      },\r\n      simpleSheet: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state\r\n    return (\r\n\r\n      <div className=\"GSheet1\">\r\n    <PostIt1 />\r\n         <div id=\"book-details\">\r\n          {\r\n            data.map(obj => {\r\n              return (\r\n                     <div key={obj.A1}>\r\n                         <h2><a href = {obj.A1}  target=\"_blank\"> {obj.A1}</a></h2>\r\n                         <b>{obj.A1}</b>\r\n                      </div>\r\n             )\r\n            })\r\n            // alert('A name was submitted: ');\r\n          }\r\n        {/* <button\r\n                  onClick={() => {\r\n                    alert('A name was submitted: ' + data);\r\n                    console.log(data[0].A1);\r\n                  }}\r\n        >\r\n          Populate</button> */}\r\n        <textarea\r\n            ref={this.editor}\r\n            value={this.state.text}\r\n            // value={this.state.loaded}\r\n            onChange={e => this.setState({ text: e.target.value })}\r\n                >\r\n        </textarea>\r\n        <button\r\n          onClick={() => {\r\n            const textareaElem = this.editor.current;\r\n            const selectionStart = textareaElem.selectionStart;\r\n            const selectionEnd = textareaElem.selectionEnd;\r\n            if (selectionStart === selectionEnd) {\r\n              // no selection, just concat\r\n              this.setState({ text: this.state.text + 'Hello World' });\r\n            } else {\r\n              this.setState({\r\n                text:\r\n                  this.state.text.slice(0, selectionStart) +\r\n                  'Hello World' +\r\n                  this.state.text.slice(selectionEnd)\r\n              });\r\n              alert('A name was submitted: ' + this.state.text.slice(selectionStart, selectionEnd));\r\n            }\r\n            textareaElem.focus();\r\n          }}\r\n        >\r\n          Insert\r\n        </button>\r\n        </div>\r\n</div>\r\n\r\n);\r\n}\r\n}\r\n\r\nexport default GSheet1;",["172","173"],"/Users/shahril/react/react-app2/src/components/ToDo1.jsx",[],"/Users/shahril/react/react-app2/src/components/ToDo1Items.jsx",[],"/Users/shahril/react/react-app2/src/components/ToDo2.jsx",["174","175","176","177","178"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Tabletop from 'tabletop';\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database';\r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\nimport Note from './ToDo2Note';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNote = this.addNote.bind(this);\r\n    this.removeNote = this.removeNote.bind(this);\r\n\r\n    // this.app = firebase.initializeApp(DB_CONFIG);\r\n    // this.database = this.app.database().ref().child('themes');\r\n    this.database = firebase.database().ref().child('themes');\r\n\r\n    this.editor = React.createRef(); // this is crucial for the selection func\r\n    this.state = {\r\n      data: [],\r\n      themes: [],\r\n      // text: 'Initial3',\r\n      text: this.props.newNoteContent,\r\n      height: 100\r\n    };\r\n    this.extractSelection = this.extractSelection.bind(this);\r\n  }\r\n   \r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref().child('postIt');\r\n    const dbRef2 = firebase.database().ref().child('themes');\r\n    const previousNotes = this.state.themes;\r\n\r\n    console.log('A2', this);\r\n    // DataSnapshot\r\n    dbRef2.on('child_added', snap => {\r\n      previousNotes.push({\r\n        id: snap.key,\r\n        text: snap.val().text,\r\n      })\r\n\r\n      this.setState({\r\n        themes: previousNotes\r\n      })\r\n    })\r\n\r\n    dbRef2.on('child_removed', snap => {\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        if(previousNotes[i].id === snap.key){\r\n          previousNotes.splice(i, 1);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        themes: previousNotes\r\n      })\r\n    })\r\n\r\n    // dbRef.on('value', data => (\r\n    //   DataDisplay.innerText = data.val()\r\n    //   ));\r\n\t  dbRef.on('value', snap => {\r\n      this.setState({\r\n        text: snap.val()\r\n      })\r\n    });\r\n    // Tabletop.init({\r\n    //   key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n    //   callback: googleData => {\r\n    //     this.setState({\r\n    //       data: googleData,\r\n    //       text: googleData[0].A1\r\n    //     })\r\n    //   },\r\n    //   simpleSheet: true\r\n    // })\r\n  }\r\n\r\n  addNote(note){\r\n    console.log('A1', this);\r\n    this.database.push().set({ text: note});\r\n  }\r\n\r\n  removeNote(noteId){\r\n    console.log(\"from the parent1: \" + noteId);\r\n    this.database.child(noteId).remove();\r\n  }\r\n\r\n  extractSelection(e) {\r\n    const textareaElem = this.editor.current;\r\n    const selectionStart = textareaElem.selectionStart;\r\n    const selectionEnd = textareaElem.selectionEnd;\r\n    if (selectionStart === selectionEnd) {\r\n      // no selection, just concat\r\n      this.setState({ text: this.state.text + 'Hello World' });\r\n    } else {\r\n      // this.setState({\r\n      //   text:\r\n      //     this.state.text.slice(0, selectionStart) +\r\n      //     'Hello World' +\r\n      //     this.state.text.slice(selectionEnd)\r\n      // });\r\n      // alert('A name was submitted: ' + this.state.text.slice(selectionStart, selectionEnd));\r\n      var newItem = {\r\n        text: this.state.text.slice(selectionStart, selectionEnd),\r\n        key: Date.now()\r\n      };\r\n      // this.props.addNote(this.state.newNoteContent);\r\n      this.addNote(this.state.text.slice(selectionStart, selectionEnd));\r\n      // this.setState((prevState) => {\r\n      //   return { \r\n      //     themes: prevState.themes.concat(newItem) \r\n      //   };\r\n      // });\r\n  }\r\n    textareaElem.focus();\r\n\r\n    // if (this._inputElement.value !== \"\") {\r\n    //   var newItem = {\r\n    //     text: this._inputElement.value,\r\n    //     key: Date.now()\r\n    //   };\r\n   \r\n    //   this.setState((prevState) => {\r\n    //     return { \r\n    //       themes: prevState.themes.concat(newItem) \r\n    //     };\r\n    //   });\r\n     \r\n    //   this._inputElement.value = \"\";\r\n    // }\r\n     \r\n    console.log(this.state.themes);\r\n       \r\n    e.preventDefault();  \r\n  }\r\n  \r\n    //method called from Todo component\r\n    handleDelete = todo => {\r\n      const themes = this.state.themes.filter((t) => {\r\n          return t.key !== todo\r\n      });\r\n      this.setState({ themes }); // delete prob solved by using themes here n in const name instead of todos\r\n      // console.log(this.state.themes);\r\n      // console.log(todo);\r\n\r\n    }\r\n\r\n    changeTextareaHandler = () => {\r\n      // console.log('A3', this);\r\n      const elemHeight = this.editor.current.scrollHeight;\r\n      this.setState({ height: elemHeight });\r\n    };\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"todoListMain\">\r\n        <Container className=\"mainContainer\">\r\n          <Row>\r\n            <Col className=\"leftCol\">\r\n              <div className=\"header notesBody\">\r\n                <form className=\"postIt\" onSubmit={this.extractSelection}>\r\n                {/* <textarea ref={(a) => this._inputElement = a} */}\r\n                  <div>\r\n                    <textarea className=\"addBtn postIt\" \r\n                      // style={{ height: this.state.height, padding: 0 }}\r\n                      style={{ height: this.state.height, padding: 0 }}\r\n                      ref={this.editor}\r\n                      value={this.state.text}\r\n                      onMouseOver={this.changeTextareaHandler}\r\n                      // onChange={e => this.setState({ text: e.target.value })}\r\n                      placeholder=\"enter task\">\r\n                    </textarea>\r\n                  </div>\r\n                  <button className=\"addBtn\" type=\"submit\">add2</button>\r\n                </form>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n            <div className=\"notesBody\">\r\n              {this.state.themes.map((note) => {\r\n                return (\r\n                  <Note text={note.text} \r\n                  noteId={note.id} \r\n                  key={note.id} \r\n                  removeNote ={this.removeNote}/>\r\n                )\r\n              })}\r\n            </div>      \r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {/* <table className=\"tableTD2\">\r\n                <tbody>\r\n                    {this.state.themes.map((theme, index) => (\r\n                        <tr key={theme.key}>\r\n                            <Todo2Items todo={theme} newDelete={this.removeNote(index)} fooDelete={this.handleDelete} fooDoneDone={this.handleDone} />\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table> */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default TodoList;","/Users/shahril/react/react-app2/src/components/FJollyToDoList.jsx",[],"/Users/shahril/react/react-app2/src/components/FJollyToDo.jsx",[],"/Users/shahril/react/react-app2/src/components/FJollyToDoForm.jsx",[],"/Users/shahril/react/react-app2/src/components/ToDo2Items.jsx",[],"/Users/shahril/react/react-app2/src/cfg/config.js",[],"/Users/shahril/react/react-app2/src/components/ToDo2Note.jsx",["179"],"import React, { Component } from 'react';\r\n// import './Note.css';\r\nimport PropTypes from 'prop-types';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import { Glyphicon } from 'react-bootstrap';\r\n// import Glyphicon from '../../node_modules/react-bootstrap/lib/Glyphicon'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Note extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: props.text\r\n        };\r\n        this.noteId = props.noteId; \r\n        // this.noteIdx = props.key; \r\n        this.noteIdx = props.noteIdx; \r\n        this.handleRemoveNote = this.handleRemoveNote.bind(this);\r\n    }\r\n\r\n    handleRemoveNote(id, key){\r\n        console.log('TDNoteA', id);\r\n        // abv is 1st to appear upon Trash btn, showing the snap.key of Note ...\r\n        // of whose 1 theme was Trashed\r\n\r\n        // console.log('TDNoteB', this.noteId); // same val as above\r\n        // console.log('TDNoteC', this.noteIdx); // same val as below\r\n        console.log('TDNoteD', key);\r\n        // 2nd to appear\r\n\r\n        // this.props.removeNote(id);\r\n        this.props.removeNote(id, key);\r\n        // this.props.removeTheme(id);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"theme fade-in col-xs-6\">\r\n                <FontAwesomeIcon className=\"closebtn\"c icon={faTrash} onClick={() => this.handleRemoveNote(this.noteId, this.noteIdx)} />\r\n                {/* <span>\r\n                    <Glyphicon glyph=\"search\"/>\r\n                </span>  */}\r\n                {/* <span className=\"glyphicon glyphicon-info-sign\"></span> */}\r\n                {/* <span className=\"closebtn\" \r\n                      onClick={() => this.handleRemoveNote(this.noteId)}>\r\n                      &times;\r\n                </span> */}\r\n                <p className=\"noteTheme\">{ this.state.text }</p>\r\n                {/* <button className=\"glyphicon glyphicon-info-sign\" onClick={() => this.handleRemoveNote(this.noteId)} className=\"btn btn-danger btn-sm\">Delete</button> */}\r\n                {/* <button className=\"glyphicon glyphicon-info-sign\" onClick={() => this.handleRemoveNote(this.noteId)}>Delete</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNote.propTypes = {\r\n    noteContent: PropTypes.string\r\n}\r\n\r\nexport default Note;","/Users/shahril/react/react-app2/src/components/PieceForm.jsx",["180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Todo2 from \"./ToDo2\";\r\nimport Tabletop from 'tabletop';\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database'; \r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\nimport Note from './ToDo2Note';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PieceEntry from './PieceEntry';\r\nimport PieceNote from './PieceNote';\r\n\r\nclass PieceForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNote = this.addNote.bind(this);\r\n    this.removeNote = this.removeNote.bind(this);\r\n    // this.removeTheme = this.removeTheme.bind(this);\r\n\r\n    // this.app = firebase.initializeApp(DB_CONFIG);\r\n    // this.database = this.app.database().ref().child('themes');\r\n    this.database = firebase.database().ref().child('notes');\r\n    this.db2 = firebase.database().ref().child('notes').child('themesA');\r\n\r\n    // We're going to setup the React state of our component\r\n    this.state = {\r\n      notes: [],\r\n      themes: []\r\n    }\r\n  }\r\n   \r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref().child('postIt');\r\n    const dbRef2 = firebase.database().ref().child('themes');\r\n    const previousNotes = this.state.notes;\r\n\r\n    // DataSnapshot\r\n    this.database.on('child_added', snap => {\r\n      previousNotes.push({\r\n        id: snap.key,\r\n        noteContent: snap.val().noteContent,\r\n        themes: snap.val().themesA,\r\n      })\r\n      // console.log('Add0', snap);\r\n      // abv appears for each Note (DataSnapshot) on load\r\n\r\n      console.log('Add1', snap.val());\r\n      // abv appears for each Note (content of branch, i.e nCont & themesA) on load\r\n      // and is the final clog to appear on load\r\n\r\n      this.setState({\r\n        notes: previousNotes\r\n      })\r\n    })\r\n\r\n    this.database.on('child_changed', snap => {\r\n      // previousNotes.push({\r\n      //   id: snap.key,\r\n      //   noteContent: snap.val().noteContent,\r\n      //   themes: snap.val().themesA,\r\n      // })\r\n      console.log('FChg', snap.key);\r\n      // as of 1504am, 17th to appear upon Trash, giving the key in qn\r\n      // after NinC, appears again as 24th (2nd of 4th)\r\n      // after themeC, appears again as 34th (3rd of 4th)\r\n      // after NinC, appears again as 41st (4th of 4th)\r\n      // this is the 1st msg to start repeating\r\n      // wondering if due to ch.chg listening at top level\r\n      // as of 1604am, now 18th to appear upon Trash, giving the key in qn\r\n        // but this time appears only 2x in total\r\n\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        if(previousNotes[i].id === snap.key){\r\n          console.log('FthemesC1: ', snap.val().themesA);\r\n          // as of 1504am, 18th to appear upon Trash, giving arr less 1\r\n          // appears again as 25th (2nd of 4th)\r\n          // appears again as 35th (3rd of 4th), but now undef\r\n          // appears again as 42nd (4th of 4th), again undef\r\n          // upon analysis, a further 3x could be due to 3 notes in total?\r\n          // as of 1604am, now 19th to appear upon Trash, giving arr less 1\r\n            // but this time appears only 2x in total\r\n            // the 2nd time undef\r\n\r\n          previousNotes[i].themes = snap.val().themesA;\r\n        }\r\n      }\r\n      // console.log('Fin chg, this: ', this);\r\n      // as of 1504am, 19th to appear upon Trash\r\n      // this is a PForm with .state.notes being the array of notes\r\n      // and as of 1504am i.e err, whose branch in qn, themes is undef\r\n      // next is NChg (PNote.jsx)\r\n      // appears again as 26th (2nd of 4th)\r\n      // appears again as 36th (3rd of 4th)\r\n      // appears again as 43rd (4th of 4th)\r\n      // commenting this out on 1604am\r\n\r\n      this.setState({\r\n        notes: previousNotes\r\n      })\r\n    })\r\n\r\n    this.database.on('child_removed', snap => {\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        if(previousNotes[i].id === snap.key){\r\n          previousNotes.splice(i, 1);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        notes: previousNotes\r\n      })\r\n    })\r\n  }\r\n\r\n  addNote(note){\r\n    const themesC = this.state.themes;\r\n    const dbRef2 = firebase.database().ref().child('themes');\r\n    // this.database.push\r\n    this.database.push().set({ \r\n      noteContent: note,\r\n      // this.db2.push().set({ \r\n      //   themesB: note\r\n      // }),\r\n        themesA: [note+'0', note+'1']\r\n    });\r\n    console.log('addNote: ', this);\r\n    // abv is last to appear upon Add Note, shows the PForm ....\r\n    // whose .state.notes is the array of Notes\r\n  }\r\n\r\n  removeNote(noteId, key){\r\n    const previousNotes = this.state.notes;\r\n    const dbRef3 = firebase.database().ref().child('notes');\r\n    var flag = 0;\r\n\r\n    console.log(\"from the parent: \" + noteId, ' ', key);\r\n    // as of 1504am, 5th to appear upon Trash\r\n    // giving snap.key followed by array idx\r\n\r\n    console.log(this.database.child(noteId).themesA);\r\n    // as of 1504am, 6th to appear upon Trash\r\n    // giving undef as of 1504am\r\n\r\n    console.log(this.db2.child(key));\r\n    // as of 1504am, 7th to appear upon Trash\r\n    // giving Reference, with path.pieces is arr(3) vals being \"notes\", \"themesA\", \"0\"\r\n    // and is confusing so shd ignore (for now)\r\n\r\n    // this.database.child(noteId).remove(); // this works to del the entire note\r\n    // this.db2.child(key).remove(); // didnt work, even after changing db2 path to themesA\r\n    // this.database.child(noteId).child(userId).get().then(function(snapshot) {\r\n    //   if (snapshot.exists()) {\r\n    //     console.log(snapshot.val());\r\n    //   }\r\n    //   else {\r\n    //     console.log(\"No data available\");\r\n    //   }\r\n    // }).catch(function(error) {\r\n    //   console.error(error);\r\n    // });\r\n    dbRef3.child(noteId).on('value', (snapshot) => {\r\n      const data = snapshot.val();\r\n      // updateStarCount(postElement, data);\r\n      console.log('this inside: ', this);\r\n      // as of 1504am, 8th to appear upon Trash\r\n      // this is a PForm with .state.notes being the array of notes\r\n      // and as of 1504am i.e err, whose branch in qn, themes is undef\r\n      // appears again as 31st, also undef\r\n      // as of 1604am, remains 8th to appear upon Trash\r\n        // but looking further, it now appears 3x in total\r\n        // and in this repeated set, currT showing arr len 2 and 1\r\n        // then 1 and 0, then totally absent\r\n\r\n      console.log('insnap: ', snapshot.val(), 'flag: ', flag);\r\n      // as of 1504am, 9th to appear upon Trash\r\n      // s.val is the Note in question\r\n      // and as of 1504am i.e err, themesA is before del\r\n      // appears again as 32nd, Note in qn, but this time themesA \r\n      // is totally absent\r\n\r\n      // at this pt, 1504am, wanna note that elem in state.notes is ...\r\n      // id, nCont and themes, but in fb, is ...\r\n      // nCont and themesA\r\n\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        if(previousNotes[i].id === snapshot.key){\r\n          console.log('themesC: ', previousNotes[i].themes);\r\n          // as of 1504am, 9th to appear upon Trash\r\n          // curr state themes i.e before del\r\n          // appears again as 33rd, but this time themes is less 1\r\n            // and is not followed by currT below but FChg instead\r\n\r\n          const currThemes = [...snapshot.val().themesA];\r\n          console.log('currThemes: ', currThemes);\r\n          // as of 1504am, 10th to appear upon Trash\r\n          // curr db themes i.e before del\r\n\r\n          currThemes.splice(key, 1);\r\n          console.log('currThemes: ', currThemes);\r\n          // as of 1504am, 11th to appear upon Trash\r\n          // cp of curr db themes after del\r\n          // as of 1504am, upon Trash, what appears next is a 2nd \"this inside\"\r\n            // thus 12th, and appears to be identical to the 1st\r\n            // and wnat follows are similarly insnap, themesC and 2x currTh\r\n            // thus 13th-16th, but these are diff fr the 1st instance\r\n            // insnap contains arr less 1 elem,\r\n            // themesC is still bef del\r\n            // but 1st currT is aft del\r\n            // and 2nd currT is less _2_ elems\r\n              // which seems to indicate a double del!!!\r\n            // and next is FChg\r\n\r\n          // previousNotes.splice(i, 1);\r\n          // a thought occurs: with >1 clients, will state be enough\r\n          // to get the current state to use to upd db?\r\n          dbRef3.child(noteId).update({\r\n            themesA: currThemes\r\n          }); \r\n\r\n          dbRef3.child(noteId).on('value', (insnap) => {\r\n            const data = insnap.val();\r\n            console.log('value snap:', data);\r\n            // as of 1504am, NOT the 12th to appear upon Trash\r\n            // perhaps cos .update above kicked in first\r\n            // in fact, it appears after the very last NinC\r\n            // appears 2x and followed by errors (TypeErr)\r\n\r\n            // updateStarCount(postElement, data);\r\n            // // this below causes err 'this.state.notes.map is not a func'\r\n            // this.setState({\r\n            //   notes: insnap.val()\r\n            // })\r\n          });\r\n\r\n          // console.log('flag os1: ', flag);\r\n          // dbRef3.child(noteId).get().then(function(insnap) {\r\n          //   if (insnap.exists()) {\r\n          //     // flag = 1;\r\n          //     // console.log('this inside: ', this);\r\n          //     console.log('insnap: ', insnap.val(), 'flag: ', flag);\r\n          //   }\r\n          //   else {\r\n          //     console.log(\"No data available\");\r\n          //   }\r\n          // }).catch(function(error) {\r\n          //   console.error(error);\r\n          // });\r\n          // console.log('flag os2: ', flag);\r\n        }\r\n      }\r\n    });\r\n    this.database.child(noteId).get().then(function(snapshot) {\r\n      if (snapshot.exists()) {\r\n        // console.log(snapshot.val());\r\n        // console.log('Key: ', snapshot.key);\r\n        // console.log('themesA[0]: ', snapshot.val().themesA[key]);\r\n        // console.log('notes: ', previousNotes);\r\n        // for(var i=0; i < previousNotes.length; i++){\r\n        //   if(previousNotes[i].id === snapshot.key){\r\n        //     console.log('themesC: ', previousNotes[i].themes);\r\n        //     const currThemes = [...snapshot.val().themesA];\r\n        //     console.log('currThemes: ', currThemes);\r\n        //     currThemes.splice(key, 1);\r\n        //     console.log('currThemes: ', currThemes);\r\n        //     // previousNotes.splice(i, 1);\r\n        //     // a thought occurs: with >1 clients, will state be enough\r\n        //     // to get the current state to use to upd db?\r\n        //     // dbRef3.child(noteId).update({\r\n        //     //   themesA: currThemes\r\n        //     // }); // this works to del the entire note\r\n        //     // console.log('flag os1: ', flag);\r\n        //     // dbRef3.child(noteId).get().then(function(insnap) {\r\n        //     //   if (insnap.exists()) {\r\n        //     //     // flag = 1;\r\n        //     //     // console.log('this inside: ', this);\r\n        //     //     console.log('insnap: ', insnap.val(), 'flag: ', flag);\r\n        //     //   }\r\n        //     //   else {\r\n        //     //     console.log(\"No data available\");\r\n        //     //   }\r\n        //     // }).catch(function(error) {\r\n        //     //   console.error(error);\r\n        //     // });\r\n        //     // console.log('flag os2: ', flag);\r\n        //         // this.setState({\r\n        //         //   notes: insnap.val()\r\n        //         // })\r\n        //   }\r\n        // }\r\n      }\r\n      else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }).catch(function(error) {\r\n      console.error(error);\r\n    });\r\n  }\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"todoListMain\">\r\n        <div className=\"notesHeader\">\r\n          <div className=\"heading\">React & Firebase To-Do List</div>\r\n        </div>\r\n        <div className=\"notesFooter\">\r\n          <PieceEntry fooaddNote={this.addNote} />\r\n        </div>\r\n        <div className=\"notesBody\">\r\n          {\r\n            this.state.notes.map((note) => {\r\n              return (\r\n                <div>\r\n                  {/* <Todo2 noteContent={note.noteContent} \r\n                  noteId={note.id} \r\n                  key={note.id} \r\n                  removeNote ={this.removeNote}/> */}\r\n                  <PieceNote noteContent={note.noteContent} \r\n                  t0={note.themes[0]}\r\n                  themes={note.themes}\r\n                  noteId={note.id} \r\n                  key={note.id} \r\n                  removeNote ={this.removeNote}/>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default PieceForm;","/Users/shahril/react/react-app2/src/components/PieceNote.jsx",["194","195","196","197","198","199","200","201","202","203","204"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Tabletop from 'tabletop';\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database';\r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\nimport Note from './ToDo2Note';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PieceNote extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.noteContent = props.noteContent; \r\n    this.noteId = props.noteId; \r\n    this.handleRemoveNote = this.handleRemoveNote.bind(this);\r\n    this.removeTheme = this.removeTheme.bind(this);\r\n    this.state = {\r\n      themes: [],\r\n      text: 'Initial'\r\n    }\r\n  }\r\n   \r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref().child('postIt');\r\n    const dbRef2 = firebase.database().ref().child('themes');\r\n    const dbRef3 = firebase.database().ref().child('notes');\r\n    const dbRef4 = firebase.database().ref().child('notes/themesA');\r\n    // const previousNotes = this.state.themes;\r\n    const previousNotes = this.props.themes;\r\n    const previousText = this.state.text;\r\n\r\n    // console.log('A2', this); // will output for every Note\r\n    // DataSnapshot\r\n    // dbRef2.on('child_added', snap => {\r\n    //   previousNotes.push({\r\n    //     id: snap.key,\r\n    //     text: snap.val().text,\r\n    //   })\r\n\r\n    //   this.setState({\r\n    //     themes: previousNotes\r\n    //   })\r\n    // })\r\n\r\n    dbRef3.on('child_changed', snap => { // runs for each Note\r\n      // previousNotes.push({\r\n      //   id: snap.key,\r\n      //   noteContent: snap.val().noteContent,\r\n      //   themes: snap.val().themesA,\r\n      // })\r\n      console.log('NChg', snap.key); // but will only snap the changed rec\r\n      // following fr PForm (Fin chg)\r\n      // as of 1504am, 20th to appear upon Trash, giving key in qn\r\n      // but appears 3x in succession\r\n      // appears again as 27th (2nd of 4th)\r\n      // appears again as 37th (3rd of 4th)\r\n      // appears again as 44th (4th of 4th)\r\n      // as of 1604am, remains 20th to appear upon Trash, giving key in qn\r\n      // still 3x in succession\r\n\r\n      if (this.noteId === snap.key) {\r\n        console.log('NinA chg, this: ', this); // each this is each Note\r\n        // as of 1504am, 21st to appear upon Trash\r\n        // this is a PNote with .state quite unused\r\n        // but nCont is correct, and noteId is the snap.key\r\n        // appears again as 28th (2nd of 4th)\r\n        // appears again as 38th (3rd of 4th)\r\n        // appears again as 45th (4th of 4th)\r\n        // commenting this out on 1604am\r\n\r\n        // and as of 1504am i.e err, whose branch in qn, themes is undef\r\n        // console.log('NinB chg, previousNotes: ', previousNotes); // each this is each Note\r\n        // as of 1504am, 22nd to appear upon Trash, giving arr before del\r\n        // appears again as 29th (2nd of 4th)\r\n        // appears again as 39th (3rd of 4th)\r\n        // appears again as 46th (4th of 4th)\r\n        // commenting this out on 1604am\r\n\r\n        console.log('NinC chg, snap.val().themesA: ', snap.val().themesA); // each this is each Note\r\n        // as of 1504am, 23rd to appear upon Trash, giving arr less 1\r\n        // next is 2nd FChg\r\n        // appears again as 30th (2nd of 4th)\r\n          // but this time next is 'this inside'\r\n        // appears again as 40th (3rd of 4th), but this time is undef\r\n          // and next is FChg again\r\n        // appears again as 47th (4th of 4th), again undef\r\n          // and next is 'value snap' x2\r\n        // as of 1604am, 21st to appear upon Trash, giving arr less 1\r\n          // but this time next is 'this inside'\r\n          // and the 2nd n last time appears is followed by 'value snap' x2\r\n          // then stops due to err\r\n\r\n\r\n      // this.setState({\r\n      //   notes: previousNotes\r\n      // })\r\n    }\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        // if(this.NoteId === snap.key){\r\n        //   // console.log('themesC1: ', snap.val().themesA);\r\n        //   console.log('themesC2: ', previousNotes);\r\n        //   // previousNotes[i].themes = snap.val().themesA;\r\n        // }\r\n      }\r\n      // console.log('Nin chg, this: ', this); // each this is each Note\r\n\r\n      // this.setState({\r\n      //   notes: previousNotes\r\n      // })\r\n    })\r\n\r\n    // dbRef2.on('child_removed', snap => {\r\n    //   for(var i=0; i < previousNotes.length; i++){\r\n    //     if(previousNotes[i].id === snap.key){\r\n    //       previousNotes.splice(i, 1);\r\n    //     }\r\n    //   }\r\n\r\n    //   this.setState({\r\n    //     themes: previousNotes\r\n    //   })\r\n    // })\r\n\r\n    // dbRef.on('value', data => (\r\n    //   DataDisplay.innerText = data.val()\r\n    //   ));\r\n\r\n    // dbRef.on('value', snap => {\r\n    //   this.setState({\r\n    //     text: snap.val()\r\n    //   })\r\n    // });\r\n\r\n    // Tabletop.init({\r\n    //   key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n    //   callback: googleData => {\r\n    //     this.setState({\r\n    //       data: googleData,\r\n    //       text: googleData[0].A1\r\n    //     })\r\n    //   },\r\n    //   simpleSheet: true\r\n    // })\r\n  }\r\n\r\n  handleRemoveNote(id){\r\n    console.log('Id in PNote', id);\r\n    // this.props.removeNote(id);\r\n  }\r\n\r\n  // removeTheme(id, key){\r\n  //   console.log('rem', key); // when just key, gives theme idx\r\n  //   console.log('rem', id, ' ', key); // when id, key, theme idx goes into id, key becomes undef\r\n  //   // this.props.removeNote(key);\r\n  // }\r\n\r\n  removeTheme(key, id){\r\n    console.log('rem', key); // when just key, gives theme idx\r\n    // as of 1504am, 3rd to appear, showing snap.key\r\n\r\n    console.log('rem', id, ' ', key); // when id, key, theme idx goes into id, key becomes undef\r\n    // as of 1504am, 4th to appear, giving array key, then snap.key\r\n    \r\n    this.props.removeNote(key, id); \r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"note fade-in\">\r\n        <span className=\"closebtn\" \r\n              onClick={() => this.handleRemoveNote(this.noteId)}>\r\n              &times;\r\n        </span>\r\n        <p className=\"noteContent\">{ this.noteContent }</p>\r\n        <p className=\"noteContent\">{ this.state.text }</p>\r\n        <hr></hr>\r\n        <p className=\"noteContent\">{ this.props.t0 }</p>\r\n        <hr></hr>\r\n        <div className=\"notesBody\">\r\n              {this.props.themes.map((note, idx) => {\r\n                return (\r\n                  // <Note text={note.text} \r\n                  // noteId={note.id} \r\n                  // key={note.id} \r\n                  // removeNote ={this.removeNote}/>\r\n                  <Note text={note} \r\n                  // noteId={note.id} \r\n                  noteId={this.noteId} \r\n                  noteIdx={idx} \r\n                  // key={note.id} \r\n                  key={idx} \r\n                  removeNote={this.removeTheme}/>\r\n                )\r\n              })}\r\n            </div>      \r\n        <hr></hr>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n \r\nPieceNote.propTypes = {\r\n  noteContent: PropTypes.string\r\n}\r\n\r\nexport default PieceNote;","/Users/shahril/react/react-app2/src/components/PieceEntry.jsx",["205","206","207","208","209","210","211","212","213"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Tabletop from 'tabletop';\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database';\r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\nimport Note from './ToDo2Note';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass PieceEntry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newNoteContent: '',\r\n    };\r\n\r\n    this.handleUserInput = this.handleUserInput.bind(this);\r\n    this.writeNote = this.writeNote.bind(this);\r\n  }\r\n   \r\n  handleUserInput(e){\r\n    this.setState({\r\n        newNoteContent: e.target.value, // the value of the text input\r\n    })\r\n  }\r\n\r\n  writeNote(){\r\n    // call a method that sets the noteContent for a note to\r\n    // the value of the input\r\n    this.props.fooaddNote(this.state.newNoteContent);\r\n\r\n    // Set newNoteContent back to an empty string.\r\n    this.setState({\r\n        newNoteContent: '',\r\n    })\r\n  }\r\n\r\n  render() {\r\n      return (\r\n              <div className=\"formWrapper\">\r\n                  <input className=\"noteInput\"\r\n                  placeholder=\"Enter a new note...\"\r\n                  value={this.state.newNoteContent} \r\n                  onChange={this.handleUserInput} />\r\n                  <button className=\"noteButton\"\r\n                  onClick={this.writeNote}>Add Note</button>\r\n              </div>    );\r\n    }\r\n}\r\n \r\nexport default PieceEntry;","/Users/shahril/react/react-app2/src/components/Piece2Form.jsx",["214","215","216","217","218","219","220","221","222","223","224","225"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Todo2 from \"./ToDo2\";\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database'; \r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\nimport Note from './ToDo2Note';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PieceEntry from './PieceEntry';\r\nimport PieceNote from './PieceNote';\r\nimport Piece2Note from './Piece2Note';\r\n\r\nclass PieceForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNote = this.addNote.bind(this);\r\n    this.removeNote = this.removeNote.bind(this);\r\n    // this.removeTheme = this.removeTheme.bind(this);\r\n\r\n    // this.app = firebase.initializeApp(DB_CONFIG);\r\n    // this.database = this.app.database().ref().child('themes');\r\n    this.database = firebase.database().ref().child('notes2');\r\n    this.db2 = firebase.database().ref().child('notes2').child('themes');\r\n\r\n    // We're going to setup the React state of our component\r\n    this.state = {\r\n      notes: []\r\n    }\r\n  }\r\n   \r\n  componentDidMount() {\r\n    // const dbRef = firebase.database().ref().child('postIt');\r\n    // const dbRef2 = firebase.database().ref().child('themes');\r\n    const previousNotes = this.state.notes;\r\n\r\n    // DataSnapshot\r\n    // console.log('P2F, b4 _add, this.database: ', this.database);\r\n    // console.log('P2F, b4 _add, this.db2: ', this.db2);\r\n    // console.log('P2F, b4 _add, this.database.child(this.noteId): ', this.database.child(this.noteId));\r\n    this.database.on('child_added', snap => {\r\n      previousNotes.push({\r\n        id: snap.key,\r\n        noteContent: snap.val().noteContent,\r\n        themes: snap.val().themesA,\r\n      })\r\n      // console.log('Add0', snap);\r\n      // abv appears for each Note (DataSnapshot) on load\r\n\r\n      console.log('Add1', snap.val());\r\n      // abv appears for each Note (content of branch, i.e nCont & themesA) on load\r\n      // and is the final clog to appear on load\r\n\r\n      // this.database.child(this.noteId).push().set({ theme: this.noteContent.slice(selectionStart, selectionEnd)});\r\n      // this.database.child(this.noteId).get().then(function(snapshot) {\r\n      //   if (snapshot.exists()) {\r\n      //     console.log(snapshot.val());\r\n      //   }\r\n      //   else {\r\n      //     console.log(\"No data available\");\r\n      //   }\r\n      // }).catch(function(error) {\r\n      //   console.error(error);\r\n      // });\r\n\r\n      this.setState({\r\n        notes: previousNotes\r\n      })\r\n    })\r\n\r\n    this.database.on('child_changed', snap => {\r\n      console.log('prevNotes0: ', previousNotes);\r\n      // previousNotes.push({\r\n      //   id: snap.key,\r\n      //   noteContent: snap.val().noteContent,\r\n      //   themes: snap.val().themesA,\r\n      // })\r\n      console.log('FChg', snap.key);\r\n      // console.log('FthemesC0: ', snap.val().themesA);\r\n      // as of 1504am, 17th to appear upon Trash, giving the key in qn\r\n      // after NinC, appears again as 24th (2nd of 4th)\r\n      // after themeC, appears again as 34th (3rd of 4th)\r\n      // after NinC, appears again as 41st (4th of 4th)\r\n      // this is the 1st msg to start repeating\r\n      // wondering if due to ch.chg listening at top level\r\n      // as of 1604am, now 18th to appear upon Trash, giving the key in qn\r\n        // but this time appears only 2x in total\r\n\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        if(previousNotes[i].id === snap.key){\r\n          console.log('FthemesC1: ', snap.val().themesA);\r\n          // as of 1504am, 18th to appear upon Trash, giving arr less 1\r\n          // appears again as 25th (2nd of 4th)\r\n          // appears again as 35th (3rd of 4th), but now undef\r\n          // appears again as 42nd (4th of 4th), again undef\r\n          // upon analysis, a further 3x could be due to 3 notes in total?\r\n          // as of 1604am, now 19th to appear upon Trash, giving arr less 1\r\n            // but this time appears only 2x in total\r\n            // the 2nd time undef\r\n\r\n          previousNotes[i].themes = snap.val().themesA;\r\n        }\r\n      }\r\n      console.log('prevNotes1: ', previousNotes);\r\n      // console.log('Fin chg, this: ', this);\r\n      // as of 1504am, 19th to appear upon Trash\r\n      // this is a PForm with .state.notes being the array of notes\r\n      // and as of 1504am i.e err, whose branch in qn, themes is undef\r\n      // next is NChg (PNote.jsx)\r\n      // appears again as 26th (2nd of 4th)\r\n      // appears again as 36th (3rd of 4th)\r\n      // appears again as 43rd (4th of 4th)\r\n      // commenting this out on 1604am\r\n\r\n      this.setState({\r\n        notes: previousNotes\r\n      })\r\n      console.log('state.notes: ', this.state.notes);\r\n    })\r\n\r\n    this.database.on('child_removed', snap => {\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        if(previousNotes[i].id === snap.key){\r\n          previousNotes.splice(i, 1);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        notes: previousNotes\r\n      })\r\n    })\r\n  }\r\n\r\n  addNote(note){\r\n    // const themesC = this.state.themes;\r\n    // const dbRef2 = firebase.database().ref().child('themes');\r\n    // this.database.push\r\n    this.database.push().set({ \r\n      noteContent: note,\r\n      // this.db2.push().set({ \r\n      //   themesB: note\r\n      // }),\r\n        themesA: [note+' ABC DEF 0', note+' ABC DEF 1', note+' ABC DEF 2']\r\n    });\r\n    console.log('addNote: ', this);\r\n    // abv is last to appear upon Add Note, shows the PForm ....\r\n    // whose .state.notes is the array of Notes\r\n  }\r\n\r\n  removeNote(noteId, key){\r\n    const previousNotes = this.state.notes;\r\n    const dbRef3 = firebase.database().ref().child('notes2');\r\n    var flag = 0;\r\n\r\n    console.log(\"from the parent: \" + noteId, ' ', key);\r\n    // as of 1504am, 5th to appear upon Trash\r\n    // giving snap.key followed by array idx\r\n    // as of P2 (1604nn), key returns undef\r\n\r\n    // new as of P2\r\n    console.log('in P2F, rNote, this: ', this);\r\n    // as of P2, this returns PForm with state.notes arr of n notes\r\n      // so next gonna rem fr db \r\n\r\n    // console.log(this.database.child(noteId).themesA);\r\n    // as of 1504am, 6th to appear upon Trash\r\n    // giving undef as of 1504am\r\n    // commenting this out on the onset of P2F cos atm no themes\r\n\r\n    // console.log(this.db2.child(key));\r\n    // as of 1504am, 7th to appear upon Trash\r\n    // giving Reference, with path.pieces is arr(3) vals being \"notes\", \"themesA\", \"0\"\r\n    // and is confusing so shd ignore (for now)\r\n    // commenting this out on the onset of P2F cos atm no themes\r\n\r\n    // below is the code to remove Note\r\n    this.database.child(noteId).remove(); // this works to del the entire note\r\n\r\n    // commenting out the whole .on on the onset\r\n    // dbRef3.child(noteId).on('value', (snapshot) => {\r\n    //   const data = snapshot.val();\r\n    //   // updateStarCount(postElement, data);\r\n    //   console.log('this inside: ', this);\r\n    //   // as of 1504am, 8th to appear upon Trash\r\n    //   // this is a PForm with .state.notes being the array of notes\r\n    //   // and as of 1504am i.e err, whose branch in qn, themes is undef\r\n    //   // appears again as 31st, also undef\r\n    //   // as of 1604am, remains 8th to appear upon Trash\r\n    //     // but looking further, it now appears 3x in total\r\n    //     // and in this repeated set, currT showing arr len 2 and 1\r\n    //     // then 1 and 0, then totally absent\r\n\r\n    //   // at this pt, 1504am, wanna note that elem in state.notes is ...\r\n    //   // id, nCont and themes, but in fb, is ...\r\n    //   // nCont and themesA\r\n\r\n    //   for(var i=0; i < previousNotes.length; i++){\r\n    //     if(previousNotes[i].id === snapshot.key){\r\n    //       console.log('themesC: ', previousNotes[i].themes);\r\n    //       // as of 1504am, 9th to appear upon Trash\r\n    //       // curr state themes i.e before del\r\n    //       // appears again as 33rd, but this time themes is less 1\r\n    //         // and is not followed by currT below but FChg instead\r\n\r\n    //       const currThemes = [...snapshot.val().themesA];\r\n    //       console.log('currThemes: ', currThemes);\r\n    //       // as of 1504am, 10th to appear upon Trash\r\n    //       // curr db themes i.e before del\r\n\r\n    //       currThemes.splice(key, 1);\r\n    //       console.log('currThemes: ', currThemes);\r\n    //       // as of 1504am, 11th to appear upon Trash\r\n    //       // cp of curr db themes after del\r\n    //       // as of 1504am, upon Trash, what appears next is a 2nd \"this inside\"\r\n    //         // thus 12th, and appears to be identical to the 1st\r\n    //         // and wnat follows are similarly insnap, themesC and 2x currTh\r\n    //         // thus 13th-16th, but these are diff fr the 1st instance\r\n    //         // insnap contains arr less 1 elem,\r\n    //         // themesC is still bef del\r\n    //         // but 1st currT is aft del\r\n    //         // and 2nd currT is less _2_ elems\r\n    //           // which seems to indicate a double del!!!\r\n    //         // and next is FChg\r\n\r\n    //       // previousNotes.splice(i, 1);\r\n    //       // a thought occurs: with >1 clients, will state be enough\r\n    //       // to get the current state to use to upd db?\r\n    //       dbRef3.child(noteId).update({\r\n    //         themesA: currThemes\r\n    //       }); \r\n\r\n    //       dbRef3.child(noteId).on('value', (insnap) => {\r\n    //         const data = insnap.val();\r\n    //         console.log('value snap:', data);\r\n    //         // as of 1504am, NOT the 12th to appear upon Trash\r\n    //         // perhaps cos .update above kicked in first\r\n    //         // in fact, it appears after the very last NinC\r\n    //         // appears 2x and followed by errors (TypeErr)\r\n\r\n    //         // updateStarCount(postElement, data);\r\n    //         // // this below causes err 'this.state.notes.map is not a func'\r\n    //         // this.setState({\r\n    //         //   notes: insnap.val()\r\n    //         // })\r\n    //       });\r\n\r\n    //       // console.log('flag os1: ', flag);\r\n    //       // dbRef3.child(noteId).get().then(function(insnap) {\r\n    //       //   if (insnap.exists()) {\r\n    //       //     // flag = 1;\r\n    //       //     // console.log('this inside: ', this);\r\n    //       //     console.log('insnap: ', insnap.val(), 'flag: ', flag);\r\n    //       //   }\r\n    //       //   else {\r\n    //       //     console.log(\"No data available\");\r\n    //       //   }\r\n    //       // }).catch(function(error) {\r\n    //       //   console.error(error);\r\n    //       // });\r\n    //       // console.log('flag os2: ', flag);\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n  }\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"todoListMain\">\r\n        <div className=\"notesHeader\">\r\n          <div className=\"heading\">&lt;Title&gt;</div>\r\n        </div>\r\n        <div className=\"notesFooter\">\r\n          <PieceEntry className=\"formWrapper\" fooaddNote={this.addNote} />\r\n        </div>\r\n        <div className=\"notesBody\">\r\n          {\r\n            this.state.notes.map((note) => {\r\n              return (\r\n                <Piece2Note noteContent={note.noteContent} \r\n                themes={note.themes}\r\n                noteId={note.id} \r\n                key={note.id} \r\n                fooremoveNote={this.removeNote}/>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div> /* <!-- #className=\"todoListMain\" --> */\r\n    );\r\n  }\r\n}\r\n \r\nexport default PieceForm;","/Users/shahril/react/react-app2/src/components/Piece2Note.jsx",["226","227","228","229","230","231","232","233","234","235","236"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Tabletop from 'tabletop';\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database';\r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\n// import Note from './ToDo2Note';\r\nimport Note from './Piece2Theme';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PieceNote extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.noteContent = props.noteContent; \r\n    this.noteId = props.noteId; \r\n    this.handleRemoveNote = this.handleRemoveNote.bind(this);\r\n    this.removeTheme = this.removeTheme.bind(this);\r\n    // this.removeNote = this.removeNote.bind(this);\r\n    // this.addNote = this.addNote.bind(this);\r\n    this.addTheme = this.addTheme.bind(this);\r\n\r\n    this.database = firebase.database().ref().child('themes');\r\n    this.db2 = firebase.database().ref().child('notes2');\r\n\r\n    // both below wrong\r\n    // this.dbRef4 = firebase.database().ref().child('notes2').child('themes');\r\n    // this.dbRef4 = firebase.database().ref().child('notes2/themes');\r\n\r\n    this.editor = React.createRef(); // this is crucial for the selection func\r\n    // this.state = {\r\n    //   themes: [],\r\n    //   text: 'Initial'\r\n    // }\r\n    this.state = {\r\n      data: [],\r\n      themes: props.themes,\r\n      // text: 'Initial3',\r\n      text: this.props.newNoteContent,\r\n      height: 100\r\n    };\r\n    this.extractSelection = this.extractSelection.bind(this);\r\n  }\r\n   \r\n  componentDidMount() {\r\n    // const dbRef = firebase.database().ref().child('postIt');\r\n    // const dbRef2 = firebase.database().ref().child('themes');\r\n    const dbRef3 = firebase.database().ref().child('notes2');\r\n    const dbRef4 = firebase.database().ref().child('notes2/themes');\r\n    // const previousNotes = this.state.themes;\r\n    const previousNotes = this.props.themes;\r\n    const previousText = this.state.text;\r\n\r\n    // console.log('A2', this); // will output for every Note\r\n    // DataSnapshot\r\n    // dbRef3.on('child_added', snap => {\r\n    //   console.log('P2N, _add, this: ', this);\r\n    //   console.log('P2N, _add, snap: ', snap.key);\r\n    //   // previousNotes.push({\r\n    //   //   id: snap.key,\r\n    //   //   text: snap.val().text,\r\n    //   // })\r\n\r\n    //   // this.setState({\r\n    //   //   themes: previousNotes\r\n    //   // })\r\n    // })\r\n\r\n    dbRef3.on('child_changed', snap => { // runs for each Note\r\n      // previousNotes.push({\r\n      //   id: snap.key,\r\n      //   noteContent: snap.val().noteContent,\r\n      //   themes: snap.val().themesA,\r\n      // })\r\n\r\n      if (this.noteId === snap.key) {\r\n        console.log('NinC0 chg, snap.val().themesA: ', snap.val().themesA); // each this is each Note\r\n        console.log('NinC1 chg, this: ', this); // each this is each Note\r\n        // as of 1504am, 23rd to appear upon Trash, giving arr less 1\r\n        // next is 2nd FChg\r\n        // appears again as 30th (2nd of 4th)\r\n          // but this time next is 'this inside'\r\n        // appears again as 40th (3rd of 4th), but this time is undef\r\n          // and next is FChg again\r\n        // appears again as 47th (4th of 4th), again undef\r\n          // and next is 'value snap' x2\r\n        // as of 1604am, 21st to appear upon Trash, giving arr less 1\r\n          // but this time next is 'this inside'\r\n          // and the 2nd n last time appears is followed by 'value snap' x2\r\n          // then stops due to err\r\n\r\n\r\n      this.setState({\r\n        themes: snap.val().themesA\r\n      })\r\n      }\r\n      // for(var i=0; i < previousNotes.length; i++){\r\n      //   // if(this.NoteId === snap.key){\r\n      //   //   // console.log('themesC1: ', snap.val().themesA);\r\n      //   //   console.log('themesC2: ', previousNotes);\r\n      //   //   // previousNotes[i].themes = snap.val().themesA;\r\n      //   // }\r\n      // }\r\n      // console.log('Nin chg, this: ', this); // each this is each Note\r\n\r\n      // this.setState({\r\n      //   notes: previousNotes\r\n      // })\r\n    })\r\n\r\n    // dbRef2.on('child_removed', snap => {\r\n    //   for(var i=0; i < previousNotes.length; i++){\r\n    //     if(previousNotes[i].id === snap.key){\r\n    //       previousNotes.splice(i, 1);\r\n    //     }\r\n    //   }\r\n\r\n    //   this.setState({\r\n    //     themes: previousNotes\r\n    //   })\r\n    // })\r\n\r\n    // dbRef.on('value', data => (\r\n    //   DataDisplay.innerText = data.val()\r\n    //   ));\r\n\r\n    // dbRef.on('value', snap => {\r\n    //   this.setState({\r\n    //     text: snap.val()\r\n    //   })\r\n    // });\r\n\r\n    // Tabletop.init({\r\n    //   key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n    //   callback: googleData => {\r\n    //     this.setState({\r\n    //       data: googleData,\r\n    //       text: googleData[0].A1\r\n    //     })\r\n    //   },\r\n    //   simpleSheet: true\r\n    // })\r\n  }\r\n\r\n  handleRemoveNote(id){\r\n    console.log('Id in PNote', id);\r\n    this.props.fooremoveNote(id);\r\n  }\r\n\r\n  // removeTheme(id, key){\r\n  //   console.log('rem', key); // when just key, gives theme idx\r\n  //   console.log('rem', id, ' ', key); // when id, key, theme idx goes into id, key becomes undef\r\n  //   // this.props.removeNote(key);\r\n  // }\r\n\r\n  removeTheme(key, id){\r\n    const prevThemes = this.props.themes;\r\n    var dbThemes = this.props.themes;\r\n    var flag = 0;\r\n    const dbRef3 = firebase.database().ref().child('notes2');\r\n\r\n    console.log('rem', key); // when just key, gives theme idx\r\n    // as of 1504am, 3rd to appear, showing snap.key\r\n\r\n    console.log('rem', id, ' ', key); // when id, key, theme idx goes into id, key becomes undef\r\n    // as of 1504am, 4th to appear, giving array key, then snap.key\r\n    \r\n    console.log('props.themes: ', prevThemes);\r\n    // so props is ok\r\n    console.log('this: ', this);\r\n    this.db2.child(key).get().then(function(insnap) {\r\n      if (insnap.exists()) {\r\n        flag = 1;\r\n        // console.log('this inside: ', this);\r\n        // console.log('insnap: ', insnap.val(), 'flag: ', flag);\r\n        var record = insnap.val(); // interesting to note that what is \r\n        // console.log('insnap.val0: ', record); // returned here is post-del\r\n        dbThemes = insnap.val().themesA;\r\n        console.log('insnap: ', dbThemes);\r\n        const currThemes = [...insnap.val().themesA];\r\n        // when to use const, when to use var?\r\n        // when to use ... when no need?\r\n        // upon research, my belief is for arr fr db, no need for ...\r\n        console.log('dbThemes0: ', dbThemes);\r\n        // dbThemes0 (may) show n-len b4 splice but still \r\n        // show post-splice arr upon expansion\r\n        dbThemes.splice(id, 1);\r\n        if (dbThemes.length == 0) {\r\n          console.log('len 0');\r\n          dbThemes = [record.noteContent];\r\n          alert('Must have at least one theme. Entire text remains.');\r\n        };\r\n        console.log('dbThemes1: ', dbThemes);\r\n        // dbThemes1 shows (n-1)len after splice and also \r\n        // show post-splice arr upon expansion\r\n        record.themesA = dbThemes;\r\n        console.log('insnap.val1: ', record);\r\n        dbRef3.child(key).update({\r\n          themesA: dbThemes\r\n        });\r\n      }\r\n      else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }).catch(function(error) {\r\n      console.error(error);\r\n    });\r\n    // this.props.removeNote(key, id); \r\n\r\n    // flag technique doesnt really work cos of multi-threading and async i think\r\n    // console.log('flag: ', flag);\r\n    // if (flag === 1) {\r\n    //   console.log('dbThemes2: ', dbThemes);\r\n    // };\r\n  }\r\n\r\n  addTheme(theme){\r\n    // this.database.push().set({ noteContent: note});\r\n  }\r\n  \r\n  extractSelection(e) {\r\n    const dbRef3 = firebase.database().ref().child('notes2');\r\n    var dbThemes = this.props.themes;\r\n    const textareaElem = this.editor.current;\r\n    const selectionStart = textareaElem.selectionStart;\r\n    const selectionEnd = textareaElem.selectionEnd;\r\n    if (selectionStart === selectionEnd) {\r\n      // no selection, just concat\r\n      // this.setState({ text: this.state.text + 'Hello World' });\r\n      alert('A name was submitted: ' + this.noteContent.slice(selectionStart, selectionEnd));\r\n    } else {\r\n      // this.setState({\r\n      //   text:\r\n      //     this.state.text.slice(0, selectionStart) +\r\n      //     'Hello World' +\r\n      //     this.state.text.slice(selectionEnd)\r\n      // });\r\n      // alert('A name was submitted: ' + this.noteContent.slice(selectionStart, selectionEnd));\r\n      var newItem = {\r\n        text: this.noteContent.slice(selectionStart, selectionEnd),\r\n        key: this.noteId\r\n      };\r\n      console.log('extSel, this: ', this);\r\n      // // this.db2.child(this.noteId).push().set({ theme: this.noteContent.slice(selectionStart, selectionEnd)});\r\n      // this.db2.child(this.noteId).child('themes').push().set({ theme: this.noteContent.slice(selectionStart, selectionEnd)});\r\n\r\n      // above is prev approach to add new branch\r\n      // now below try add array element\r\n      this.db2.child(this.noteId).get().then(function(insnap) {\r\n        if (insnap.exists()) {\r\n          // console.log('this inside: ', this);\r\n          // console.log('insnap: ', insnap.val(), 'flag: ', flag);\r\n          var record = insnap.val(); // interesting to note that what is \r\n          console.log('eS, insnap.val0: ', record); // returned here is post-del\r\n          dbThemes = insnap.val().themesA;\r\n          console.log('eS, insnap: ', dbThemes);\r\n          const currThemes = [...insnap.val().themesA];\r\n          // when to use const, when to use var?\r\n          // when to use ... when no need?\r\n          // upon research, my belief is for arr fr db, no need for ...\r\n          // console.log('eS, dbThemes0: ', dbThemes);\r\n          // dbThemes.splice(id, 1);\r\n          dbThemes.push(newItem.text);\r\n          // console.log('eS, dbThemes1: ', dbThemes);\r\n          record.themesA = dbThemes;\r\n          console.log('eS, insnap.val1: ', record);\r\n          console.log('eS, dbRef3: ', dbRef3);\r\n          dbRef3.child(newItem.key).update({\r\n            themesA: dbThemes\r\n          });\r\n        }\r\n        else {\r\n          console.log(\"No data available\");\r\n        }\r\n      }).catch(function(error) {\r\n        console.error(error);\r\n      });\r\n  \r\n      // // this.props.addNote(this.state.newNoteContent);\r\n      // this.addNote(this.state.text.slice(selectionStart, selectionEnd));\r\n\r\n    }\r\n    textareaElem.focus();\r\n\r\n    console.log('end of extSel', this.state.themes);\r\n    // but state may not have been updated yet so may show b4 +1 len\r\n       \r\n    e.preventDefault();  \r\n  }\r\n  \r\n  changeTextareaHandler = () => {\r\n    console.log('A3', this);\r\n    const elemHeight = this.editor.current.scrollHeight;\r\n    this.setState({ height: elemHeight });\r\n  };\r\n\r\nrender() {\r\n  var tasks = {\r\n    wip: [],\r\n    complete: []\r\n  }\r\n  this.state.themes.forEach ((t) => {\r\n    // tasks[t.category].push(\r\n    //     <div key={t.name} \r\n    //         onDragStart = {(e) => this.onDragStart(e, t.name)}\r\n    //         draggable\r\n    //         className=\"draggable\"\r\n    //         style = {{backgroundColor: t.bgcolor}}\r\n    //     >\r\n    //         {t.name}\r\n    //     </div>\r\n    // );\r\n    tasks[\"wip\"].push(\r\n      <div key={t} \r\n          onDragStart = {(e) => this.onDragStart(e, t)}\r\n          draggable\r\n          className=\"draggable\"\r\n      >\r\n          {t}\r\n      </div>\r\n  );\r\n});\r\nconsole.log(tasks)\r\n\r\n  return (\r\n        <div className=\"note fade-in\">\r\n        <span className=\"closebtn\" \r\n              onClick={() => this.handleRemoveNote(this.noteId)}>\r\n              &times;\r\n        </span>\r\n        {/* <p className=\"noteContent\">{ this.noteContent }</p>\r\n        <p className=\"noteContent\">{ this.state.text }</p> */}\r\n        <hr></hr>\r\n        {/* <p className=\"noteContent\">{ this.props.t0 }</p>\r\n        <hr></hr> */}\r\n        {/* <div className=\"notesBody\">\r\n              {this.props.themes.map((note, idx) => {\r\n                return (\r\n                  // <Note text={note.text} \r\n                  // noteId={note.id} \r\n                  // key={note.id} \r\n                  // removeNote ={this.removeNote}/>\r\n                  <Note text={note} \r\n                  // noteId={note.id} \r\n                  noteId={this.noteId} \r\n                  noteIdx={idx} \r\n                  // key={note.id} \r\n                  key={idx} \r\n                  removeNote={this.removeTheme}/>\r\n                )\r\n              })}\r\n            </div>       */}\r\n        <div className=\"todoListMain\">\r\n          <Container className=\"mainContainer\">\r\n            <Row>\r\n              <Col className=\"leftCol\">\r\n                <div className=\"header notesBody\">\r\n                  <form className=\"postIt\" onSubmit={this.extractSelection}>\r\n                  {/* <textarea ref={(a) => this._inputElement = a} */}\r\n                    <div>\r\n                      <textarea className=\"addBtn postIt\" \r\n                        // style={{ height: this.state.height, padding: 0 }}\r\n                        style={{ height: this.state.height, padding: 0 }}\r\n                        ref={this.editor}\r\n                        // value={this.state.text}\r\n                        value={this.noteContent}\r\n                        onMouseOver={this.changeTextareaHandler}\r\n                        // onChange={e => this.setState({ text: e.target.value })}\r\n                        placeholder=\"enter task\"\r\n                        readOnly>\r\n                      </textarea>\r\n                    </div>\r\n                    <button className=\"addBtn\" type=\"submit\">add2</button>\r\n                  </form>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n              <div className=\"notesBody\">\r\n                {/* <div>Suspect have to make below this.state instead of props</div>\r\n                <div>But where did I get to approach to use props?</div> */}\r\n                {/* <div>Tried using state but non-upd issue remains</div> */}\r\n                {this.state.themes.map((note, idx) => {\r\n                  return (\r\n                    // <p>{note}</p>\r\n                    // <Note text={note.text} \r\n                    // noteId={note.id} \r\n                    // key={note.id} \r\n                    // removeNote ={this.removeNote}/>\r\n                    <Note text={idx + \" \" + note} \r\n                    // noteId={note.id} \r\n                    noteId={this.noteId} \r\n                    noteIdx={idx} \r\n                    // key={note.id} \r\n                    key={idx} \r\n                    removeNote={this.removeTheme}/>\r\n                  )\r\n                })}\r\n              </div>\r\n              </Col>\r\n              <Col></Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Container>\r\n        </div> {/* <!-- #className=\"todoListMain\" --> */}\r\n        {/* <hr></hr> */}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n \r\nPieceNote.propTypes = {\r\n  noteContent: PropTypes.string\r\n}\r\n\r\nexport default PieceNote;","/Users/shahril/react/react-app2/src/components/Piece2Theme.jsx",["237"],"import React, { Component } from 'react';\r\n// import './Note.css';\r\nimport PropTypes from 'prop-types';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import { Glyphicon } from 'react-bootstrap';\r\n// import Glyphicon from '../../node_modules/react-bootstrap/lib/Glyphicon'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Note extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: props.text\r\n        };\r\n        this.noteId = props.noteId; \r\n        // this.noteIdx = props.key; \r\n        this.noteIdx = props.noteIdx; \r\n        this.handleRemoveNote = this.handleRemoveNote.bind(this);\r\n    }\r\n\r\n    handleRemoveNote(id, key){\r\n        console.log('TDNoteA', id);\r\n        // abv is 1st to appear upon Trash btn, showing the snap.key of Note ...\r\n        // of whose 1 theme was Trashed\r\n\r\n        // console.log('TDNoteB', this.noteId); // same val as above\r\n        // console.log('TDNoteC', this.noteIdx); // same val as below\r\n        console.log('TDNoteD', key);\r\n        // 2nd to appear\r\n\r\n        // this.props.removeNote(id);\r\n        this.props.removeNote(id, key);\r\n        // this.props.removeTheme(id);\r\n    }\r\n\r\n    ocInspectThis = () => {\r\n        console.log('A4', this);\r\n      };\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"theme fade-in col-xs-6\">\r\n                <FontAwesomeIcon className=\"closebtn\" icon={faTrash} onClick={() => this.handleRemoveNote(this.noteId, this.noteIdx)} />\r\n                {/* <span>\r\n                    <Glyphicon glyph=\"search\"/>\r\n                </span>  */}\r\n                {/* <span className=\"glyphicon glyphicon-info-sign\"></span> */}\r\n                {/* <span className=\"closebtn\" \r\n                      onClick={() => this.handleRemoveNote(this.noteId)}>\r\n                      &times;\r\n                </span> */}\r\n                <p className=\"noteTheme\"\r\n                    onClick={this.ocInspectThis}>\r\n                    { this.props.text }\r\n                    {/* in the end i used props instead of state here */}\r\n                </p>\r\n                {/* <button className=\"glyphicon glyphicon-info-sign\" onClick={() => this.handleRemoveNote(this.noteId)} className=\"btn btn-danger btn-sm\">Delete</button> */}\r\n                {/* <button className=\"glyphicon glyphicon-info-sign\" onClick={() => this.handleRemoveNote(this.noteId)}>Delete</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNote.propTypes = {\r\n    noteContent: PropTypes.string\r\n}\r\n\r\nexport default Note;","/Users/shahril/react/react-app2/src/components/TryCircles1.jsx",["238","239","240","241","242","243","244","245","246","247","248","249"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./ToDo1Items\";\r\nimport Todo2Items from \"./ToDo2Items\";\r\nimport Tabletop from 'tabletop';\r\nimport firebase from '@firebase/app';\r\n// import * as firebase from 'firebase/database';\r\nimport 'firebase/database';\r\nimport { DB_CONFIG } from '../cfg/config';\r\nimport Note from './ToDo2Note';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PropTypes from 'prop-types';\r\nimport Draggable from \"./Circles\"\r\n\r\nclass PieceNote extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.noteContent = props.noteContent; \r\n    this.noteId = props.noteId; \r\n    this.handleRemoveNote = this.handleRemoveNote.bind(this);\r\n    this.removeTheme = this.removeTheme.bind(this);\r\n    this.state = {\r\n      themes: [],\r\n      text: 'Initial'\r\n    }\r\n  }\r\n   \r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref().child('postIt');\r\n    const dbRef2 = firebase.database().ref().child('themes');\r\n    const dbRef3 = firebase.database().ref().child('notes');\r\n    const dbRef4 = firebase.database().ref().child('notes/themesA');\r\n    // const previousNotes = this.state.themes;\r\n    const previousNotes = this.props.themes;\r\n    const previousText = this.state.text;\r\n\r\n    dbRef3.on('child_changed', snap => { // runs for each Note\r\n      // previousNotes.push({\r\n      //   id: snap.key,\r\n      //   noteContent: snap.val().noteContent,\r\n      //   themes: snap.val().themesA,\r\n      // })\r\n      console.log('NChg', snap.key); // but will only snap the changed rec\r\n      // following fr PForm (Fin chg)\r\n      // as of 1504am, 20th to appear upon Trash, giving key in qn\r\n      // but appears 3x in succession\r\n      // appears again as 27th (2nd of 4th)\r\n      // appears again as 37th (3rd of 4th)\r\n      // appears again as 44th (4th of 4th)\r\n      // as of 1604am, remains 20th to appear upon Trash, giving key in qn\r\n      // still 3x in succession\r\n\r\n      if (this.noteId === snap.key) {\r\n        console.log('NinA chg, this: ', this); // each this is each Note\r\n        // as of 1504am, 21st to appear upon Trash\r\n        // this is a PNote with .state quite unused\r\n        // but nCont is correct, and noteId is the snap.key\r\n        // appears again as 28th (2nd of 4th)\r\n        // appears again as 38th (3rd of 4th)\r\n        // appears again as 45th (4th of 4th)\r\n        // commenting this out on 1604am\r\n\r\n        // and as of 1504am i.e err, whose branch in qn, themes is undef\r\n        // console.log('NinB chg, previousNotes: ', previousNotes); // each this is each Note\r\n        // as of 1504am, 22nd to appear upon Trash, giving arr before del\r\n        // appears again as 29th (2nd of 4th)\r\n        // appears again as 39th (3rd of 4th)\r\n        // appears again as 46th (4th of 4th)\r\n        // commenting this out on 1604am\r\n\r\n        console.log('NinC chg, snap.val().themesA: ', snap.val().themesA); // each this is each Note\r\n        // as of 1504am, 23rd to appear upon Trash, giving arr less 1\r\n        // next is 2nd FChg\r\n        // appears again as 30th (2nd of 4th)\r\n          // but this time next is 'this inside'\r\n        // appears again as 40th (3rd of 4th), but this time is undef\r\n          // and next is FChg again\r\n        // appears again as 47th (4th of 4th), again undef\r\n          // and next is 'value snap' x2\r\n        // as of 1604am, 21st to appear upon Trash, giving arr less 1\r\n          // but this time next is 'this inside'\r\n          // and the 2nd n last time appears is followed by 'value snap' x2\r\n          // then stops due to err\r\n\r\n\r\n      // this.setState({\r\n      //   notes: previousNotes\r\n      // })\r\n    }\r\n      for(var i=0; i < previousNotes.length; i++){\r\n        // if(this.NoteId === snap.key){\r\n        //   // console.log('themesC1: ', snap.val().themesA);\r\n        //   console.log('themesC2: ', previousNotes);\r\n        //   // previousNotes[i].themes = snap.val().themesA;\r\n        // }\r\n      }\r\n      // console.log('Nin chg, this: ', this); // each this is each Note\r\n\r\n      // this.setState({\r\n      //   notes: previousNotes\r\n      // })\r\n    })\r\n  }\r\n\r\n  handleRemoveNote(id){\r\n    console.log('Id in PNote', id);\r\n    // this.props.removeNote(id);\r\n  }\r\n\r\n  // removeTheme(id, key){\r\n  //   console.log('rem', key); // when just key, gives theme idx\r\n  //   console.log('rem', id, ' ', key); // when id, key, theme idx goes into id, key becomes undef\r\n  //   // this.props.removeNote(key);\r\n  // }\r\n\r\n  removeTheme(key, id){\r\n    console.log('rem', key); // when just key, gives theme idx\r\n    // as of 1504am, 3rd to appear, showing snap.key\r\n\r\n    console.log('rem', id, ' ', key); // when id, key, theme idx goes into id, key becomes undef\r\n    // as of 1504am, 4th to appear, giving array key, then snap.key\r\n    \r\n    this.props.removeNote(key, id); \r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div draggable className=\"note fade-in\">\r\n          {/* <Draggable> */}\r\n            <Note text={\"note\"} \r\n            // noteId={note.id} \r\n            noteId={this.noteId} \r\n            noteIdx={0} \r\n            // key={note.id} \r\n            // key={0} \r\n            removeNote={this.removeTheme}/>\r\n          {/* </Draggable> */}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n \r\nPieceNote.propTypes = {\r\n  noteContent: PropTypes.string\r\n}\r\n\r\nexport default PieceNote;","/Users/shahril/react/react-app2/src/components/Circles.js",[],"/Users/shahril/react/react-app2/src/Circles.js",[],"/Users/shahril/react/react-app2/src/components/gSheet2_tt1.jsx",["250","251","252","253","254","255","256","257","258","259","260","261"],"import React, { Component } from 'react';\r\n// import logo from './logo.png';\r\n// import '../App.css';\r\nimport Tabletop from 'tabletop';\r\nimport PostIt1 from '../components/postIt1'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {\r\n  BrowserView,\r\n  MobileView,\r\n  AndroidView,\r\n  isDesktop,\r\n  isMacOs,\r\n  isBrowser,\r\n  isMobile,\r\n  isAndroid,\r\n  isIOS\r\n} from \"react-device-detect\";\r\nimport { Textfit } from 'react-textfit';\r\nimport ScaleText from \"react-scale-text\";\r\n\r\nclass GSheet1 extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.editor = React.createRef();\r\n    this.state = {\r\n      data: [{A1: \"A1\", B1: \"B2\", C1: \"C2\", D1: \"D2\", E1: \"E2\"}],\r\n      tdata: [],\r\n      text: 'Initial2',\r\n      loaded: false\r\n    }\r\n    // Tabletop.init({\r\n    //   key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n    //   callback: googleData => {\r\n    //     this.setState({\r\n    //       data: googleData,\r\n    //       loaded: true,\r\n    //       text: googleData[0].A1\r\n    //     })\r\n    //   },\r\n    //   simpleSheet: true\r\n    // })\r\n    console.log('0: ', this.state);\r\n  }\r\n  \r\n  componentDidMount() { \r\n    if (isDesktop) {\r\n      console.log('dev: isDsk');\r\n    }\r\n    if (isMacOs) {\r\n      console.log('dev: isMac');\r\n    }\r\n    if (isMobile) {\r\n      console.log('dev: isMob');\r\n    }\r\n    Tabletop.init({\r\n      key: '1MmHjfOgvAPvFk8pe2UOciV0vIMxBt7EBa94kyHNHCO0',\r\n      callback: googleData => {\r\n        this.setState({\r\n          data: googleData,\r\n          loaded: true,\r\n          text: googleData[0].A1\r\n        })\r\n      },\r\n      simpleSheet: true\r\n    })\r\n    const result = Object.assign(...Object.keys(this.state.data[0]).map( key =>\r\n      ({ [key]: this.state.data.map( o => o[key] ) })\r\n    ));\r\n    console.log('1: ', this.state);\r\n    console.log('3a: ', result);\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state\r\n    console.log('2: ', this.state);\r\n    if (this.state.loaded) {\r\n      const result = Object.assign(...Object.keys(this.state.data[0]).map( key =>\r\n        ({ [key]: this.state.data.map( o => o[key] ) })\r\n      ));\r\n      console.log('3b: ', result);\r\n    };\r\n    let D = {};\r\n    let L = this.state.data;\r\n    // Object.keys(L[0]).forEach(k => {\r\n    //     D[k] = L.map(o => o[k]);\r\n    // });\r\n    var dict = this.state.data;\r\n    const obj = {\r\n      foo: 'bar',\r\n      baz: 42\r\n    }\r\n    // console.log('Object.entries')\r\n    // console.log(\r\n    //   Object.entries(obj)\r\n    // )\r\n    // console.log('Mapping')\r\n    // console.log(\r\n    //   Object.entries(obj)\r\n    //   .map( ([key, value]) => `My key is ${key} and my value is ${value}` )\r\n    // )\r\n\r\n    // console.log('4: ', D);\r\n    console.log('5: ', L[0]);\r\n    // for (var key in dict) {\r\n    //   console.log('6: ', dict[key]) // this seems unreliable\r\n    // }\r\n    // const sClass = \"subj2 child\";\r\n    const sClass = \"child\";\r\n                \r\n    return (\r\n\r\n      <div className=\"GSheet1\">\r\n        {/* <PostIt1 /> */}\r\n        <div id=\"book-details\">\r\n          {/* {\r\n            data.map(obj => {\r\n              return (\r\n                <div className=\"subj1\" key={obj.A1}>\r\n                <h2><a href = {obj.A1}  target=\"_blank\"> {obj.A1}</a></h2>\r\n                         <b>{obj.A1}</b>\r\n                      </div>\r\n             )\r\n            })\r\n            // alert('A name was submitted: ');\r\n          } */}\r\n        </div>\r\n        <div className=\"todoListMain\">\r\n          <Container fluid className=\"mainContainer\">\r\n            <Row>\r\n              <Col className=\"leftCol\">\r\n                <div className=\"header notesBody\">\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                {\r\n                  data.map(obj => {\r\n                    return (\r\n                      <div>\r\n                      <div key={obj.A1}>\r\n                              <h2><a href = {obj.A1}  target=\"_blank\"> {obj.A1}</a></h2>\r\n                              <b>{obj.A1}</b>\r\n                            </div>\r\n                      <div className=\"subj2 parent\" style={{ width: \"100px\", height: \"50px\" }}>\r\n                      <ScaleText maxFontSize={20}>\r\n                      <div className={sClass}>{obj.A1}</div>\r\n                      </ScaleText>\r\n                      </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                  // alert('A name was submitted: ');\r\n                }\r\n              </Col>\r\n              <Col>\r\n                {\r\n                  data.map(obj => {\r\n                    return (\r\n                            <div key={obj.B1}>\r\n                              <h2><a href = {obj.B1}  target=\"_blank\"> {obj.B1}</a></h2>\r\n                              {/* <b>{obj.B1}</b> */}\r\n                              <div className=\"subj1 parent\" style={{ width: \"100px\", height: \"50px\" }}>\r\n                                <ScaleText maxFontSize={20}>\r\n                                <div className={sClass}>{obj.B1}</div>\r\n                                </ScaleText>\r\n                              </div>\r\n                              {/* <div style={{backgroundColor: \"#F6BB42\", height: 50, borderRadius: '5px', padding: 5}}>{obj.B1}</div> */}\r\n                            </div>\r\n                  )\r\n                  })\r\n                  // alert('A name was submitted: '); style={{ height: this.state.height, padding: 0 }}\r\n                }\r\n              </Col>\r\n              <Col>\r\n              {\r\n                  data.map(obj => {\r\n                    return (\r\n                            <div key={obj.C1}>\r\n                              <h2><a href = {obj.C1}  target=\"_blank\"> {obj.C1}</a></h2>\r\n                              {/* <b>{obj.C1}</b> */}\r\n                              <div className=\"subj1 parent\" style={{ width: \"100px\", height: \"50px\" }}>\r\n                                <ScaleText maxFontSize={20}>\r\n                                <div className={sClass}>{obj.C1}</div>\r\n                                </ScaleText>\r\n                              </div>\r\n                              {/* <div style={{backgroundColor: \"#F6BB42\", height: 50, borderRadius: '5px', padding: 5}}>{obj.B1}</div> */}\r\n                            </div>\r\n                  )\r\n                  })\r\n                  // alert('A name was submitted: '); style={{ height: this.state.height, padding: 0 }}\r\n                }\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <BrowserView>\r\n              <h3> This is rendered only in browser </h3>\r\n          </BrowserView>\r\n          <MobileView>\r\n              <h3> This is rendered only on mobile </h3>\r\n          </MobileView>\r\n          <AndroidView>\r\n              <h3> This is rendered only on Android </h3>\r\n          </AndroidView>\r\n        </div> {/* <!-- #className=\"todoListMain\" --> */}\r\n      </div> /* <!-- #className=\"GSheet1\" -->  */\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GSheet1;","/Users/shahril/react/react-app2/src/components/gSheet2_tt2_RGL.jsx",[],"/Users/shahril/react/react-app2/src/test-hook.jsx",[],"/Users/shahril/react/react-app2/src/components/gSheet2_tt3_RGL.jsx",["262","263","264","265","266","267","268","269","270","271","272","273","274","275"],{"ruleId":"276","severity":1,"message":"277","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":11},{"ruleId":"276","severity":1,"message":"280","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":15},{"ruleId":"276","severity":1,"message":"281","line":9,"column":8,"nodeType":"278","messageId":"279","endLine":9,"endColumn":15},{"ruleId":"276","severity":1,"message":"282","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":24},{"ruleId":"276","severity":1,"message":"283","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":13},{"ruleId":"276","severity":1,"message":"284","line":13,"column":8,"nodeType":"278","messageId":"279","endLine":13,"endColumn":13},{"ruleId":"276","severity":1,"message":"285","line":14,"column":8,"nodeType":"278","messageId":"279","endLine":14,"endColumn":17},{"ruleId":"276","severity":1,"message":"286","line":15,"column":8,"nodeType":"278","messageId":"279","endLine":15,"endColumn":18},{"ruleId":"276","severity":1,"message":"287","line":16,"column":8,"nodeType":"278","messageId":"279","endLine":16,"endColumn":22},{"ruleId":"276","severity":1,"message":"288","line":18,"column":8,"nodeType":"278","messageId":"279","endLine":18,"endColumn":17},{"ruleId":"276","severity":1,"message":"289","line":19,"column":18,"nodeType":"278","messageId":"279","endLine":19,"endColumn":21},{"ruleId":"276","severity":1,"message":"290","line":20,"column":8,"nodeType":"278","messageId":"279","endLine":20,"endColumn":17},{"ruleId":"276","severity":1,"message":"291","line":33,"column":7,"nodeType":"278","messageId":"279","endLine":33,"endColumn":18},{"ruleId":"276","severity":1,"message":"292","line":35,"column":7,"nodeType":"278","messageId":"279","endLine":35,"endColumn":12},{"ruleId":"276","severity":1,"message":"293","line":42,"column":7,"nodeType":"278","messageId":"279","endLine":42,"endColumn":14},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"276","severity":1,"message":"298","line":1,"column":40,"nodeType":"278","messageId":"279","endLine":1,"endColumn":44},{"ruleId":"276","severity":1,"message":"298","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"298","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"299","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"301","line":38,"column":30,"nodeType":"302","endLine":38,"endColumn":66},{"ruleId":"276","severity":1,"message":"299","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"301","line":43,"column":30,"nodeType":"302","endLine":43,"endColumn":66},{"ruleId":"294","replacedBy":"303"},{"ruleId":"296","replacedBy":"304"},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"309","line":110,"column":11,"nodeType":"278","messageId":"279","endLine":110,"endColumn":18},{"ruleId":"276","severity":1,"message":"310","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":18},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"311","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":13},{"ruleId":"276","severity":1,"message":"307","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"312","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":12},{"ruleId":"276","severity":1,"message":"313","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":11},{"ruleId":"276","severity":1,"message":"315","line":13,"column":8,"nodeType":"278","messageId":"279","endLine":13,"endColumn":11},{"ruleId":"276","severity":1,"message":"316","line":37,"column":11,"nodeType":"278","messageId":"279","endLine":37,"endColumn":16},{"ruleId":"276","severity":1,"message":"317","line":38,"column":11,"nodeType":"278","messageId":"279","endLine":38,"endColumn":17},{"ruleId":"276","severity":1,"message":"318","line":120,"column":11,"nodeType":"278","messageId":"279","endLine":120,"endColumn":18},{"ruleId":"276","severity":1,"message":"317","line":121,"column":11,"nodeType":"278","messageId":"279","endLine":121,"endColumn":17},{"ruleId":"276","severity":1,"message":"319","line":166,"column":13,"nodeType":"278","messageId":"279","endLine":166,"endColumn":17},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"313","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":11},{"ruleId":"276","severity":1,"message":"315","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":11},{"ruleId":"276","severity":1,"message":"316","line":29,"column":11,"nodeType":"278","messageId":"279","endLine":29,"endColumn":16},{"ruleId":"276","severity":1,"message":"317","line":30,"column":11,"nodeType":"278","messageId":"279","endLine":30,"endColumn":17},{"ruleId":"276","severity":1,"message":"320","line":32,"column":11,"nodeType":"278","messageId":"279","endLine":32,"endColumn":17},{"ruleId":"276","severity":1,"message":"321","line":35,"column":11,"nodeType":"278","messageId":"279","endLine":35,"endColumn":23},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":16},{"ruleId":"276","severity":1,"message":"322","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"312","line":9,"column":8,"nodeType":"278","messageId":"279","endLine":9,"endColumn":12},{"ruleId":"276","severity":1,"message":"313","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":11},{"ruleId":"276","severity":1,"message":"315","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":11},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"311","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":13},{"ruleId":"276","severity":1,"message":"308","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"312","line":9,"column":8,"nodeType":"278","messageId":"279","endLine":9,"endColumn":12},{"ruleId":"276","severity":1,"message":"313","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":11},{"ruleId":"276","severity":1,"message":"315","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":11},{"ruleId":"276","severity":1,"message":"288","line":14,"column":8,"nodeType":"278","messageId":"279","endLine":14,"endColumn":17},{"ruleId":"276","severity":1,"message":"323","line":154,"column":11,"nodeType":"278","messageId":"279","endLine":154,"endColumn":24},{"ruleId":"276","severity":1,"message":"324","line":155,"column":11,"nodeType":"278","messageId":"279","endLine":155,"endColumn":17},{"ruleId":"276","severity":1,"message":"325","line":156,"column":9,"nodeType":"278","messageId":"279","endLine":156,"endColumn":13},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"320","line":53,"column":11,"nodeType":"278","messageId":"279","endLine":53,"endColumn":17},{"ruleId":"276","severity":1,"message":"323","line":55,"column":11,"nodeType":"278","messageId":"279","endLine":55,"endColumn":24},{"ruleId":"276","severity":1,"message":"321","line":56,"column":11,"nodeType":"278","messageId":"279","endLine":56,"endColumn":23},{"ruleId":"276","severity":1,"message":"325","line":177,"column":9,"nodeType":"278","messageId":"279","endLine":177,"endColumn":13},{"ruleId":"276","severity":1,"message":"326","line":184,"column":15,"nodeType":"278","messageId":"279","endLine":184,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":192,"column":29,"nodeType":"329","messageId":"330","endLine":192,"endColumn":31},{"ruleId":"276","severity":1,"message":"326","line":261,"column":17,"nodeType":"278","messageId":"279","endLine":261,"endColumn":27},{"ruleId":"276","severity":1,"message":"310","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":18},{"ruleId":"276","severity":1,"message":"305","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"307","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"313","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":17},{"ruleId":"276","severity":1,"message":"314","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":11},{"ruleId":"276","severity":1,"message":"315","line":12,"column":8,"nodeType":"278","messageId":"279","endLine":12,"endColumn":11},{"ruleId":"276","severity":1,"message":"290","line":14,"column":8,"nodeType":"278","messageId":"279","endLine":14,"endColumn":17},{"ruleId":"276","severity":1,"message":"316","line":30,"column":11,"nodeType":"278","messageId":"279","endLine":30,"endColumn":16},{"ruleId":"276","severity":1,"message":"317","line":31,"column":11,"nodeType":"278","messageId":"279","endLine":31,"endColumn":17},{"ruleId":"276","severity":1,"message":"320","line":33,"column":11,"nodeType":"278","messageId":"279","endLine":33,"endColumn":17},{"ruleId":"276","severity":1,"message":"321","line":36,"column":11,"nodeType":"278","messageId":"279","endLine":36,"endColumn":23},{"ruleId":"276","severity":1,"message":"299","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"331","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":15},{"ruleId":"276","severity":1,"message":"332","line":15,"column":3,"nodeType":"278","messageId":"279","endLine":15,"endColumn":12},{"ruleId":"276","severity":1,"message":"333","line":17,"column":3,"nodeType":"278","messageId":"279","endLine":17,"endColumn":12},{"ruleId":"276","severity":1,"message":"334","line":18,"column":3,"nodeType":"278","messageId":"279","endLine":18,"endColumn":8},{"ruleId":"276","severity":1,"message":"335","line":20,"column":10,"nodeType":"278","messageId":"279","endLine":20,"endColumn":17},{"ruleId":"276","severity":1,"message":"336","line":84,"column":9,"nodeType":"278","messageId":"279","endLine":84,"endColumn":10},{"ruleId":"276","severity":1,"message":"337","line":89,"column":9,"nodeType":"278","messageId":"279","endLine":89,"endColumn":13},{"ruleId":"276","severity":1,"message":"338","line":90,"column":11,"nodeType":"278","messageId":"279","endLine":90,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":142,"column":35,"nodeType":"302","endLine":142,"endColumn":71},{"ruleId":"300","severity":1,"message":"301","line":161,"column":35,"nodeType":"302","endLine":161,"endColumn":71},{"ruleId":"300","severity":1,"message":"301","line":180,"column":35,"nodeType":"302","endLine":180,"endColumn":71},{"ruleId":"276","severity":1,"message":"339","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":9},{"ruleId":"276","severity":1,"message":"340","line":11,"column":8,"nodeType":"278","messageId":"279","endLine":11,"endColumn":17},{"ruleId":"276","severity":1,"message":"341","line":13,"column":8,"nodeType":"278","messageId":"279","endLine":13,"endColumn":18},{"ruleId":"276","severity":1,"message":"342","line":34,"column":16,"nodeType":"278","messageId":"279","endLine":34,"endColumn":30},{"ruleId":"327","severity":1,"message":"343","line":84,"column":27,"nodeType":"329","messageId":"330","endLine":84,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":87,"column":27,"nodeType":"329","messageId":"330","endLine":87,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":113,"column":50,"nodeType":"329","messageId":"330","endLine":113,"endColumn":52},{"ruleId":"327","severity":1,"message":"343","line":116,"column":50,"nodeType":"329","messageId":"330","endLine":116,"endColumn":52},{"ruleId":"327","severity":1,"message":"343","line":119,"column":51,"nodeType":"329","messageId":"330","endLine":119,"endColumn":53},{"ruleId":"327","severity":1,"message":"343","line":122,"column":53,"nodeType":"329","messageId":"330","endLine":122,"endColumn":55},{"ruleId":"327","severity":1,"message":"328","line":125,"column":47,"nodeType":"329","messageId":"330","endLine":125,"endColumn":49},{"ruleId":"327","severity":1,"message":"328","line":128,"column":47,"nodeType":"329","messageId":"330","endLine":128,"endColumn":49},{"ruleId":"327","severity":1,"message":"328","line":131,"column":47,"nodeType":"329","messageId":"330","endLine":131,"endColumn":49},{"ruleId":"276","severity":1,"message":"344","line":173,"column":11,"nodeType":"278","messageId":"279","endLine":173,"endColumn":17},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'GSheet1' is defined but never used.","'GSheet2' is defined but never used.","'NoDraggingLayout' is defined but never used.","'ToDo1' is defined but never used.","'ToDo2' is defined but never used.","'PieceForm' is defined but never used.","'Piece2Form' is defined but never used.","'FJollyToDoList' is defined but never used.","'PieceNote' is defined but never used.","'css' is defined but never used.","'Draggable' is defined but never used.","'firebaseApp' is assigned a value but never used.","'Title' is assigned a value but never used.","'Wrapper' is assigned a value but never used.","no-native-reassign",["345"],"no-negated-in-lhs",["346"],"'Link' is defined but never used.","'Component' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["345"],["346"],"'TodoItems' is defined but never used.","'Todo2Items' is defined but never used.","'Tabletop' is defined but never used.","'DB_CONFIG' is defined but never used.","'newItem' is assigned a value but never used.","'faCoffee' is defined but never used.","'Todo2' is defined but never used.","'Note' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'dbRef' is assigned a value but never used.","'dbRef2' is assigned a value but never used.","'themesC' is assigned a value but never used.","'data' is assigned a value but never used.","'dbRef4' is assigned a value but never used.","'previousText' is assigned a value but never used.","'firebase' is defined but never used.","'previousNotes' is assigned a value but never used.","'dbRef3' is assigned a value but never used.","'flag' is assigned a value but never used.","'currThemes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PostIt1' is defined but never used.","'isBrowser' is defined but never used.","'isAndroid' is defined but never used.","'isIOS' is defined but never used.","'Textfit' is defined but never used.","'D' is assigned a value but never used.","'dict' is assigned a value but never used.","'obj' is assigned a value but never used.","'_' is defined but never used.","'ScaleText' is defined but never used.","'GridLayout' is defined but never used.","'getWeekNumber1' is defined but never used.","Expected '!==' and instead saw '!='.","'layout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]